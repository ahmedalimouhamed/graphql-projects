type User {
    id: ID!
    username: String!
    email: String!
    password: String!
    role: String!
    createdAt: String!
    updatedAt: String!
}

type AuthPayload {
    token: String!
    user: User!
}

input RegisterInput{
    username: String!
    email: String!
    password: String!
    role: String!
}

input LoginInput{
    email: String!
    password: String!
}

type Query {
    test: String!
    me: User!
    users: [User!]!
    user(id: ID!): User
}

type Mutation{
    register(input: RegisterInput!): AuthPayload
    login(input: LoginInput!): AuthPayload!
    updateUser(id: ID!, input: RegisterInput!): User
    deleteUser(id: ID!): User
}