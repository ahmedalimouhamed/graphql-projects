type User {
    id: ID!
    name: String!
    email: String!
    role: String!
    password: String!
    createdAt: String!
    updatedAt: String!
}

type AuthPayload{
    token: String!
    user: User!
}

input registerInput {
    name: String!
    email: String!
    password: String!
    role: String!
}

input loginInput {
    email: String!
    password: String!
}

type Query{
    users: [User!]!
    user(id: ID!): User!
    me: User!
}

type Mutation{
    register(input: registerInput!): AuthPayload!
    login(input: loginInput!): AuthPayload!
    updateUser(id: ID!, input: registerInput!): User!
    deleteUser(id: ID!): User!
}